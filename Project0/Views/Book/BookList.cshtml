@model IEnumerable<Project0.Models.Book>

@{
    ViewBag.Title = "Book List";
}
@{
    Layout = null;
}

<h2>Book List</h2>


<!-- إضافة حقل البحث والقوائم المنسدلة في الأعلى -->
<div class="filters">
    <form method="get" action="@Url.Action("SearchAdmin", "Book")">
        <div class="row justify-content-center mb-4">
            <!-- حقل البحث -->
            <div class="col-md-4">
                <div class="input-group">
                    <input type="text" name="search" class="form-control" placeholder="Search by title or author" value="@Request.QueryString["search"]" />
                    <div class="input-group-append">
                        <button class="btn btn-primary" type="submit">Search</button>
                    </div>
                </div>
            </div>

            <!-- تصنيف الفئة -->
            <div class="col-md-2">
                <select name="category" class="form-control">
                    <option value="">Select Category</option>
                    <option value="Romantic" @(Request.QueryString["category"] == "Romantic" ? "selected" : "")>Romantic</option>
                    <option value="Biography" @(Request.QueryString["category"] == "Biography" ? "selected" : "")>Biography</option>
                    <option value="Mystery" @(Request.QueryString["category"] == "Mystery" ? "selected" : "")>Mystery</option>
                    <option value="All" @(Request.QueryString["category"] == "All" ? "selected" : "")>All</option>
                </select>
            </div>

            <!-- ترتيب حسب -->
            <div class="col-md-2">
                <select name="sortBy" class="form-control">
                    <option value="">Sort By</option>
                    <option value="Popularity" @(Request.QueryString["sortBy"] == "Popularity" ? "selected" : "")>Popularity</option>
                    <option value="PriceHighLow" @(Request.QueryString["sortBy"] == "PriceHighLow" ? "selected" : "")>Price: High to Low</option>
                    <option value="PriceLowHigh" @(Request.QueryString["sortBy"] == "PriceLowHigh" ? "selected" : "")>Price: Low to High</option>
                    <option value="DatePublished" @(Request.QueryString["sortBy"] == "DatePublished" ? "selected" : "")>Date Published</option>
                </select>
            </div>

            <!-- الفئة العمرية -->
            <div class="col-md-2">
                <select name="ageGroup" class="form-control">
                    <option value="">Select Age Group</option>
                    <option value="18Plus" @(Request.QueryString["ageGroup"] == "18Plus" ? "selected" : "")>18+</option>
                    <option value="8Plus" @(Request.QueryString["ageGroup"] == "8Plus" ? "selected" : "")>8+</option>
                    <option value="Children" @(Request.QueryString["ageGroup"] == "Children" ? "selected" : "")>Children</option>
                </select>
            </div>

        </div>
    </form>
</div>

<!-- عرض الكتب في شبكة -->
<div class="row">
    @foreach (var book in Model)
    {
        <div class="col-md-3 col-sm-12 mb-4">
            <div class="card">
                <img src="@Url.Content(string.IsNullOrEmpty(book.CoverImage) ? "~/Content/Images/default.jpg" : book.CoverImage)" class="card-img-top" alt="Book Image" />
                <div class="card-body">
                    <h5 class="card-title">@book.Title</h5>
                    <p class="card-text">Author: @book.Author</p>
                    @if (book.DiscountedPrice.HasValue && book.DiscountEndDate.HasValue && book.DiscountEndDate > DateTime.Now)
                    {
                        <p class="card-text">
                            <span style="text-decoration: line-through; color: red;">
                                $@book.Price
                            </span>
                            <span style="color: green; font-weight: bold;">
                                $@book.DiscountedPrice
                            </span>
                        </p>
                        <p class="discount-timer" style="font-size: 0.9em; color: #555;">
                            Discount ends on: @book.DiscountEndDate.Value.ToShortDateString()
                        </p>
                    }
                    else
                    {
                        <p class="card-text">Price: $@book.Price</p>
                    }
                    <p class="card-text">@book.Description</p>
                    <p class="card-text">Age Group: @book.AgeGroup</p>

                    <!-- زر حذف الكتاب -->
                    @using (Html.BeginForm("DeleteBook", "Book", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("id", book.BookId) <!-- إرسال معرف الكتاب -->
                        <button type="submit" class="btn btn-danger btn-sm mt-2">Delete</button>
                        <a href="@Url.Action("EditPrice", "Admin", new { id = book.BookId })" class="btn btn-warning btn-sm mt-2">Edit Price</a>
                    }
                </div>
            </div>
        </div>
    }
</div>

<!-- تنسيق CSS -->
<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #f0f0f0, #ffffff);
        background-attachment: fixed;
        margin: 0;
        padding: 0;
    }

    h2 {
        text-align: center;
        color: #4b3c31;
        margin: 40px 0 20px 0;
        font-size: 2rem;
    }

    .filters {
        width: 100%;
        margin-bottom: 30px;
    }

        .filters form {
            width: 100%;
            padding: 0 15px;
        }

        .filters .row {
            display: flex;
            justify-content: space-evenly;
            gap: 20px;
        }

        .filters select,
        .filters input {
            width: 100%;
            padding: 10px;
            font-size: 1rem;
        }

    .card {
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s ease-in-out;
        background: #ffffff;
        padding: 15px;
        margin-bottom: 20px;
    }

        .card:hover {
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

    .card-img-top {
        width: 100%;
        height: 200px; /* تصغير الحجم */
        object-fit: cover;
        border-radius: 4px;
    }

    .card-body {
        padding: 15px;
    }

    .card-title {
        font-size: 1rem;
        font-weight: bold;
        color: #4b3c31;
        margin-bottom: 10px;
    }

    .card-text {
        font-size: 0.9rem;
        color: #555;
        margin-bottom: 5px;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        justify-content: center;
    }

    .col-md-3 {
        flex: 1 0 22%; /* تقليل العرض */
    }

    .col-md-2 {
        flex: 1 0 20%; /* تنسيق الأعمدة */
    }

    .col-sm-2 {
        flex: 1 0 100%;
    }
</style>